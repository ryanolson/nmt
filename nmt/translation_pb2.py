# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: translation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='translation.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x11translation.proto\"7\n\nBatchInput\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x04\x12\x17\n\x0finput_sentences\x18\x02 \x03(\t\")\n\tUtterance\x12\x0c\n\x04word\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x02\"4\n\x12\x41udioTranscription\x12\x1e\n\nutterances\x18\x01 \x03(\x0b\x32\n.Utterance\",\n\x0bTranslation\x12\r\n\x05input\x18\x01 \x01(\t\x12\x0e\n\x06output\x18\x02 \x01(\t\"s\n\x10\x42\x61tchPredictions\x12\"\n\x0ctranslations\x18\x06 \x03(\x0b\x32\x0c.Translation\x12\x10\n\x08\x62\x61tch_id\x18\x02 \x01(\x04\x12\x14\n\x0c\x63ompute_time\x18\x03 \x01(\x02\x12\x13\n\x0b\x64\x65\x63ode_time\x18\x04 \x01(\x02\"\r\n\x0b\x43lipRequest\"\r\n\x0bServiceInit\"<\n\rServiceConfig\x12\x16\n\x0emax_batch_size\x18\x01 \x01(\r\x12\x13\n\x0b\x61udio_files\x18\x02 \x03(\t\"-\n\x07WavData\x12\r\n\x05\x61udio\x18\x01 \x01(\x0c\x12\x13\n\x0bsample_rate\x18\x02 \x01(\r\"(\n\nAudioClips\x12\x1a\n\x08wav_data\x18\x01 \x03(\x0b\x32\x08.WavData28\n\tInference\x12+\n\x07\x43ompute\x12\x0b.BatchInput\x1a\x11.BatchPredictions\"\x00\x62\x06proto3')
)




_BATCHINPUT = _descriptor.Descriptor(
  name='BatchInput',
  full_name='BatchInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='BatchInput.batch_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_sentences', full_name='BatchInput.input_sentences', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=76,
)


_UTTERANCE = _descriptor.Descriptor(
  name='Utterance',
  full_name='Utterance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='word', full_name='Utterance.word', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='offset', full_name='Utterance.offset', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=119,
)


_AUDIOTRANSCRIPTION = _descriptor.Descriptor(
  name='AudioTranscription',
  full_name='AudioTranscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='utterances', full_name='AudioTranscription.utterances', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=173,
)


_TRANSLATION = _descriptor.Descriptor(
  name='Translation',
  full_name='Translation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='Translation.input', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output', full_name='Translation.output', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=219,
)


_BATCHPREDICTIONS = _descriptor.Descriptor(
  name='BatchPredictions',
  full_name='BatchPredictions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='translations', full_name='BatchPredictions.translations', index=0,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='BatchPredictions.batch_id', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='compute_time', full_name='BatchPredictions.compute_time', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='decode_time', full_name='BatchPredictions.decode_time', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=221,
  serialized_end=336,
)


_CLIPREQUEST = _descriptor.Descriptor(
  name='ClipRequest',
  full_name='ClipRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=338,
  serialized_end=351,
)


_SERVICEINIT = _descriptor.Descriptor(
  name='ServiceInit',
  full_name='ServiceInit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=366,
)


_SERVICECONFIG = _descriptor.Descriptor(
  name='ServiceConfig',
  full_name='ServiceConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_batch_size', full_name='ServiceConfig.max_batch_size', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='audio_files', full_name='ServiceConfig.audio_files', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=368,
  serialized_end=428,
)


_WAVDATA = _descriptor.Descriptor(
  name='WavData',
  full_name='WavData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='audio', full_name='WavData.audio', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='WavData.sample_rate', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=430,
  serialized_end=475,
)


_AUDIOCLIPS = _descriptor.Descriptor(
  name='AudioClips',
  full_name='AudioClips',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='wav_data', full_name='AudioClips.wav_data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=517,
)

_AUDIOTRANSCRIPTION.fields_by_name['utterances'].message_type = _UTTERANCE
_BATCHPREDICTIONS.fields_by_name['translations'].message_type = _TRANSLATION
_AUDIOCLIPS.fields_by_name['wav_data'].message_type = _WAVDATA
DESCRIPTOR.message_types_by_name['BatchInput'] = _BATCHINPUT
DESCRIPTOR.message_types_by_name['Utterance'] = _UTTERANCE
DESCRIPTOR.message_types_by_name['AudioTranscription'] = _AUDIOTRANSCRIPTION
DESCRIPTOR.message_types_by_name['Translation'] = _TRANSLATION
DESCRIPTOR.message_types_by_name['BatchPredictions'] = _BATCHPREDICTIONS
DESCRIPTOR.message_types_by_name['ClipRequest'] = _CLIPREQUEST
DESCRIPTOR.message_types_by_name['ServiceInit'] = _SERVICEINIT
DESCRIPTOR.message_types_by_name['ServiceConfig'] = _SERVICECONFIG
DESCRIPTOR.message_types_by_name['WavData'] = _WAVDATA
DESCRIPTOR.message_types_by_name['AudioClips'] = _AUDIOCLIPS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BatchInput = _reflection.GeneratedProtocolMessageType('BatchInput', (_message.Message,), dict(
  DESCRIPTOR = _BATCHINPUT,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:BatchInput)
  ))
_sym_db.RegisterMessage(BatchInput)

Utterance = _reflection.GeneratedProtocolMessageType('Utterance', (_message.Message,), dict(
  DESCRIPTOR = _UTTERANCE,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:Utterance)
  ))
_sym_db.RegisterMessage(Utterance)

AudioTranscription = _reflection.GeneratedProtocolMessageType('AudioTranscription', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOTRANSCRIPTION,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:AudioTranscription)
  ))
_sym_db.RegisterMessage(AudioTranscription)

Translation = _reflection.GeneratedProtocolMessageType('Translation', (_message.Message,), dict(
  DESCRIPTOR = _TRANSLATION,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:Translation)
  ))
_sym_db.RegisterMessage(Translation)

BatchPredictions = _reflection.GeneratedProtocolMessageType('BatchPredictions', (_message.Message,), dict(
  DESCRIPTOR = _BATCHPREDICTIONS,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:BatchPredictions)
  ))
_sym_db.RegisterMessage(BatchPredictions)

ClipRequest = _reflection.GeneratedProtocolMessageType('ClipRequest', (_message.Message,), dict(
  DESCRIPTOR = _CLIPREQUEST,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:ClipRequest)
  ))
_sym_db.RegisterMessage(ClipRequest)

ServiceInit = _reflection.GeneratedProtocolMessageType('ServiceInit', (_message.Message,), dict(
  DESCRIPTOR = _SERVICEINIT,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:ServiceInit)
  ))
_sym_db.RegisterMessage(ServiceInit)

ServiceConfig = _reflection.GeneratedProtocolMessageType('ServiceConfig', (_message.Message,), dict(
  DESCRIPTOR = _SERVICECONFIG,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:ServiceConfig)
  ))
_sym_db.RegisterMessage(ServiceConfig)

WavData = _reflection.GeneratedProtocolMessageType('WavData', (_message.Message,), dict(
  DESCRIPTOR = _WAVDATA,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:WavData)
  ))
_sym_db.RegisterMessage(WavData)

AudioClips = _reflection.GeneratedProtocolMessageType('AudioClips', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOCLIPS,
  __module__ = 'translation_pb2'
  # @@protoc_insertion_point(class_scope:AudioClips)
  ))
_sym_db.RegisterMessage(AudioClips)



_INFERENCE = _descriptor.ServiceDescriptor(
  name='Inference',
  full_name='Inference',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=519,
  serialized_end=575,
  methods=[
  _descriptor.MethodDescriptor(
    name='Compute',
    full_name='Inference.Compute',
    index=0,
    containing_service=None,
    input_type=_BATCHINPUT,
    output_type=_BATCHPREDICTIONS,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERENCE)

DESCRIPTOR.services_by_name['Inference'] = _INFERENCE

# @@protoc_insertion_point(module_scope)
